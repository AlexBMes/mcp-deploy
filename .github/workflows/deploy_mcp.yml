name: 'Unit Tests'

on:
  push:
    branches:
      - master

jobs:
  unit-tests:
    name: 'Unit Tests'
    runs-on: ubuntu-latest
    if: contains(github.head_ref, 'mcp') && (startswith(github.head_ref, 'feat/') || startswith(github.head_ref, 'bug/') || startswith(github.head_ref, 'patch/'))
    env:
      working-directory: ./tests/mcp/deployment
      GCP_PROJECT_ID: "mcpdeploytest-${GITHUB_SHA::8}"
#      GCP_PROJECT_ID: "mcpdeploytest-$(date '+%d%m%Y-%H%M')"

    defaults:
      run:
        shell: bash
        working-directory: ${{env.working-directory}}

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      # Install the latest version of Terraform CLI
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false
      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${GCP_PROJECT_ID}
          service_account_key: ${{secrets.GCP_SA_KEY}}

      - name: Setup GCP
        run: |
          gcloud projects create $GCP_PROJECT_ID
          gcloud config set compute/zone europe-west2
          cd GCP/app/build/helloworld
          gcloud builds submit --tag gcr.io/${GCP_PROJECT_ID}/helloworld
          cd ${working-directory}/GCP
          echo 'project_id: $GCP_PROJECT_ID' | cat - gcp_ae.yml > temp && mv temp gcp_ae.yml
          echo 'image_uri: gcr.io/${GCP_PROJECT_ID}/helloworld' | cat - gcp_cloudrun.yml > temp && mv temp gcp_cloudrun.yml
          echo 'project_id: $GCP_PROJECT_ID' | cat - gcp_cloudrun.yml > temp && mv temp gcp_cloudrun.yml

      - name: Deploy GCP modules
        run: |
          cd ${env.working-directory}/gcp/terraform
          terraform init
          terraform plan
          terraform apply -auto-approve

      - name: Deploy infrastructure
        run: |
          cd ${env.working-directory}/gcp/terraform
          terraform init
          terraform plan
          terraform apply -auto-approve

      - name: setup kubectl
        run: |
          gcloud components install kubectl
          gcloud container clusters create mcpdeploytest-cluster --num-nodes=1
          gcloud container clusters get-credentials mcpdeploytest-cluster


      - name: deploy k8s
        run: |
          cd ${env.working-directory}/k8s/terraform
          echo $PWD
      #TODO: Deploy AWS